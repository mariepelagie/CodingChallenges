'''
An avid hiker keeps meticulous records of their hikes. During the last hike that took exactly  steps, for every step it was noted if it was an uphill, , or a downhill,  step. Hikes always start and end at sea level, and each step up or down represents a  unit change in altitude. We define the following terms:

A mountain is a sequence of consecutive steps above sea level, starting with a step up from sea level and ending with a step down to sea level.
A valley is a sequence of consecutive steps below sea level, starting with a step down from sea level and ending with a step up to sea level.
Given the sequence of up and down steps during a hike, find and print the number of valleys walked through.

Example

 steps = 8, path = [DDUUUUDD]

The hiker first enters a valley  units deep. Then they climb out and up onto a mountain  units high. Finally, the hiker returns to sea level and ends the hike.
'''

#
# Complete the 'countingValleys' function below.
# The function is expected to return an INTEGER.
# The function accepts following parameters:
#  1. INTEGER steps
#  2. STRING path


def countingValleys(steps, path):
    valley_counter = 0
    sea_level = 0
    for step in range( steps):
        ## Check if going down into valley when sealevel is zero.
        if sea_level == 0 and path[step] == 'D':
            valley_counter +=1
        # print(sea_level)    
        ## update sea_level. Add 1 if going up and -1 if going down
        ## so that sea_level = 0 when at sea level
        if path[step] == 'D':
            sea_level -=1
        else: 
            sea_level +=1
    # print(valley_counter)
    return valley_counter
        
